package example.entities;
// Generated Jul 26, 2016 8:16:31 AM by Hibernate Tools 5.1.0.Beta1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * JobHistory generated by hbm2java
 */
@Entity
@Table(name = "job_history", uniqueConstraints = @UniqueConstraint(columnNames = { "employee_id", "start_date" }))
public class JobHistory implements java.io.Serializable {

	private JobHistoryId id;
	private Departments departments;
	private Employee employees;
	private Job jobs;

	public JobHistory() {
	}

	public JobHistory(JobHistoryId id, Departments departments, Employee employees, Job jobs) {
		this.id = id;
		this.departments = departments;
		this.employees = employees;
		this.jobs = jobs;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "employeeId", column = @Column(name = "employee_id", nullable = false)),
			@AttributeOverride(name = "startDate", column = @Column(name = "start_date", nullable = false, length = 10)),
			@AttributeOverride(name = "endDate", column = @Column(name = "end_date", nullable = false, length = 10)),
			@AttributeOverride(name = "jobId", column = @Column(name = "job_id", nullable = false, length = 10)),
			@AttributeOverride(name = "departmentId", column = @Column(name = "department_id", nullable = false)) })
	public JobHistoryId getId() {
		return this.id;
	}

	public void setId(JobHistoryId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "department_id", nullable = false, insertable = false, updatable = false)
	public Departments getDepartments() {
		return this.departments;
	}

	public void setDepartments(Departments departments) {
		this.departments = departments;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "employee_id", nullable = false, insertable = false, updatable = false)
	public Employee getEmployees() {
		return this.employees;
	}

	public void setEmployees(Employee employees) {
		this.employees = employees;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "job_id", nullable = false, insertable = false, updatable = false)
	public Job getJobs() {
		return this.jobs;
	}

	public void setJobs(Job jobs) {
		this.jobs = jobs;
	}

}
