plugins {
    id "com.jfrog.bintray" version "1.6"
    id "maven-publish"
    id "application"
    id "com.marklogic.ml-gradle" version "2.2.0"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


if (System.getProperty("user.dir").endsWith("jobs")) {
    project.ext.smartModulePaths = ["../core/src/test/ml-modules"]
} else if (System.getProperty("user.dir").endsWith("marklogic-spring-batch")) {
    project.ext.smartModulePaths = ["core/src/test/ml-modules"]
} else {
    project.ext.smartModulePaths = ["src/test/ml-modules"]
}

ext {
    mlAppConfig {
        modulePaths = smartModulePaths
        createTriggersDatabase = false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'lib')
    compile "org.springframework.batch:spring-batch-core:3.0.7.RELEASE"

    // Used by ML Job Repo implementation; depends on DataFieldMaxValueIncrementer
    compile "org.springframework:spring-jdbc:4.2.6.RELEASE"

    // Used by MarkLogicBatchConfiguration, which depends on Jaxb2Marshaller
    compile "org.springframework:spring-oxm:4.2.6.RELEASE"

    compile("com.marklogic:ml-javaclient-util:2.5") {
  	  exclude group: 'com.marklogic.java-client', module: 'client-api-java'
    }

    compile('org.apache.jena:jena-arq:2.13.0') {
        exclude(group: 'org.slf4j')
        exclude(group: 'ch.qos.logback')
        exclude(group: 'log4j')
    }
    compile('org.apache.jena:jena-core:2.13.0') {
        exclude(group: 'org.slf4j')
        exclude(group: 'xerces')
        exclude(group: 'commons-cli')
    }
    compile('com.hp.hpl.jena:jena:2.6.4') {
        exclude(group: 'org.slf4j')
    }
    compile('com.marklogic:marklogic-jena:1.0.0'){
        changing=true
        exclude(group: 'org.slf4j')
        exclude(group: 'log4j')
        exclude(group: 'ch.qos.logback')
    }
	// Used to convert XML to json
	compile('org.json:json:20160212')
    // TODO Remove this in favor of just using jopt
    compile "commons-cli:commons-cli:1.3.1"
    compile "com.marklogic:ml-app-deployer:2.2.0"

    // For the CLI
    compile "net.sf.jopt-simple:jopt-simple:5.0.1"

    testCompile "org.springframework.batch:spring-batch-samples:2.2.7.RELEASE"

    testCompile "junit:junit"
    testCompile "com.marklogic:ml-junit:2.6.0"

    testCompile "com.jayway.restassured:rest-assured:2.3.1"
    testCompile "org.springframework.batch:spring-batch-test:3.+"
  
}

sourceSets.test.resources.srcDir 'src/test/java'

task deployMarkLogicJobRepository(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.marklogic.spring.batch.Main'
    args = ["deployJobRepo", "--jrName", mlJobRepositoryName, "--jrHost", mlHost, "--jrPort", mlRestPort, "--jrUsername", mlManageUsername, "--jrPassword", mlManagePassword, "--config", "null"]
}

task undeployMarkLogicJobRepository(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.marklogic.spring.batch.Main'
    args = ["undeployJobRepo", "--jrName", mlJobRepositoryName, "--jrHost", mlHost, "--jrPort", mlRestPort, "--jrUsername", mlManageUsername, "--jrPassword", mlManagePassword, "--config", "null"]
}

// Setup the Job Repo in our test application so it's available for use by tests.
mlPostDeploy.dependsOn deployMarkLogicJobRepository
mlUndeploy.dependsOn undeployMarkLogicJobRepository

mainClassName = "com.marklogic.spring.batch.Main"

publishing {
    publications {
        core(MavenPublication) {
            groupId group
            artifactId coreArtifact
            version coreVersion
            from components.java
        }
    }
}
 
bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['core']
    pkg {
        repo = 'maven'
        name = coreArtifact
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/sastafford/marklogic-spring-batch.git'
        version {
            name = coreVersion
            released = new Date()
        }
    }
}
